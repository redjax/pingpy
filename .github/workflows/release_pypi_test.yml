## Create a new pypi test release when a Github release is created
name: publish to pypi test
on:
  release:
    types: [published]
  
jobs:
  pypi-test:
    runs-on: ubuntu-latest
    ## Continue even if this job fails
    continue-on-error: true
    strategy:
      matrix:
        version: 
          - "3.12"
    env:
      ## Configure a constant location for the uv cache
      UV_CACHE_DIR: ${{ github.workspace }}/.uv-cache
      UV_PUBLISH_USERNAME: "__token__"
      UV_PUBLISH_PASSWORD: ${{ secrets.PYPI_TEST_TOKEN }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: 0.4.24
          enable-cache: true
          ## Invalidate cache when lockfile changes
          cache-dependency-glob: "uv.lock"

      - name: Restore uv cache
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/.uv-cache
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
            uv-${{ runner.os }}

      - name: Build the project
        run: uv build

      - name: Publish to pypi test
        run: uv publish
      
      ## Optimize cache
      - name: Minimize uv cache
        run: uv cache prune --ci
